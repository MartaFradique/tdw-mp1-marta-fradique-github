name: Pipeline

on:
  push:
    branches:
      '**'
jobs:
  install:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 16.x]
    steps:
      - uses: actions/checkout@v3
      - name: Cache node modules
        id: cache-node-modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node-modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - run: yarn install
  
jobs:
  validation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node-modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - run: npx prettier --write .
      - run: npm run lint
      - run: npm run test
      
# jobs: 
#   build: 
#     runs-on: ubuntu-latest 
#     steps: 
#       - uses: actions/checkout@v2 
#       - name: Use Node.js ${{ matrix.node-version }} 
#         uses: actions/setup-node@v3 
#         with: 
#           node-version: ${{ matrix.node-version }} 
#           cache: 'yarn' 
#       - run: yarn install 
#       - run: npx prettier --write . 
#       - run: npm run lint 
#       - run: npm run build --if-present 
#       - name: Netlify Deploy 
#         env: 
#           NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }} 
#           NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }} 
#         run: netlify deploy --dir=out --prod



# jobs:
#   build:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         node-version: [ 16.x]
#     steps:
#       - uses: actions/checkout@v3
#       - name: Use Node.js ${{ matrix.node-version }}
#         uses: actions/setup-node@v3
#         with:
#           node-version: ${{ matrix.node-version }}
#           cache: 'yarn'
#       - run: yarn install
#       - run: npx prettier --write .
#       - run: npm run lint
#       - run: npm run build --if-present
#       - name: Netlify Deploy
#         env:
#           NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
#           NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
#         run: netlify deploy --dir=out --prod